/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_de.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q        &kp W       &kp E          &kp R      &kp T      &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A        &kp S       &kp D          &kp F      &kp G      &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHIFT ESC  &mt LCTRL Z  &mt LALT X  &mt LGUI DE_C  &kp V      &kp B      &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT ESC
                                         &kp LGUI       &lt 1 ESC  &kp RET    &kp SPACE  &lt 2 TAB  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5        &kp N6         &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans        &kp LEFT       &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans        &trans         &trans    &trans    &trans     &trans  &trans
                           &kp LGUI  &trans  &kp DELETE    &kp BACKSPACE  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  "  |  ยง |  $  |  %  |   |  &  |  /  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp DE_DOUBLE_QUOTES  &kp DE_SECTION  &kp DLLR  &kp DE_PERCENT    &kp DE_AMPERSAND  &kp DE_SLASH  &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans                &trans          &trans    &trans            &kp MINUS         &kp EQUAL     &kp LBKT                 &kp RBKT                  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans                &trans          &trans    &trans            &kp UNDER         &kp PLUS      &kp LBRC                 &kp RBRC                  &kp PIPE  &kp TILDE
                                           &kp LGUI        &trans    &kp SPACE         &kp RET           &trans        &kp RALT
            >;
        };

        tri {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Tri";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
